Gfg POTD :https://www.geeksforgeeks.org/problems/sum-of-bit-differences2937/1

Code:
class Solution {
    long sumBitDifferences(int[] arr, int n) {
        // code here
        long pairsDiffBits = 0;
        for(int i=0;i<32;i++)
        {
            long ones = 0;
            for(int j=0;j<n;j++)
            {
                if((arr[j]&1)==1)
                    ones++;
                arr[j]>>=1;
            }
            pairsDiffBits += ones * (n-ones);
        }
        return pairsDiffBits*2;
    }
}

//Count the number of ones at each position by all elements. then, the number of zeroes at that position would be (n-ones). Multiply to get all pairs bit difference for that position and add it to the overall answer.