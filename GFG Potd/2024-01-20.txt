Gfg Potd 30th January, 2024: https://www.geeksforgeeks.org/problems/lcs-of-three-strings0028/1

Code:
class Solution 
{ 
    int LCSof3(String A, String B, String C, int n1, int n2, int n3) 
    { 
        int arr[][][] = new int[n1+1][n2+1][n3+1];
        
        for(int i=1;i<=n1;i++)
        {
            for(int j=1;j<=n2;j++)
            {
                for(int k=1;k<=n3;k++)
                {
                    if(A.charAt(i-1)==B.charAt(j-1) && B.charAt(j-1)==C.charAt(k-1))
                        arr[i][j][k]=1+arr[i-1][j-1][k-1];
                    else arr[i][j][k]=Math.max(Math.max(arr[i-1][j][k],arr[i][j-1][k]), arr[i][j][k-1]);
                }
            }
        }
        return arr[n1][n2][n3];
    }
}

Approach: It is a veriation of the common LCS problem. All the intuitions made for the bottom-up of the LCS problem apply here too. Just needed to add an extra dimension.
